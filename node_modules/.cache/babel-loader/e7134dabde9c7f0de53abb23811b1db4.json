{"ast":null,"code":"import _toConsumableArray from \"/Users/shiraz/Documents/react-bootcamp-materials/12-lights-out-game/react-lights-out-starter/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/shiraz/Documents/react-bootcamp-materials/12-lights-out-game/react-lights-out-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shiraz/Documents/react-bootcamp-materials/12-lights-out-game/react-lights-out-starter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shiraz/Documents/react-bootcamp-materials/12-lights-out-game/react-lights-out-starter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shiraz/Documents/react-bootcamp-materials/12-lights-out-game/react-lights-out-starter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shiraz/Documents/react-bootcamp-materials/12-lights-out-game/react-lights-out-starter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shiraz/Documents/react-bootcamp-materials/12-lights-out-game/react-lights-out-starter/src/Board.js\";\nimport React, { Component } from \"react\";\nimport Cell from \"./Cell\";\nimport './Board.css';\n\nvar Board =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Board, _Component);\n\n  function Board() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Board)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      win: false\n    };\n    _this.cellList = [];\n    _this.extractedLetters = new Set();\n    _this.coordinates = {};\n\n    _this.generateCells = function (char) {\n      return _toConsumableArray(Array(5)).map(function (x, i) {\n        var uid = char + (i + 1);\n\n        _this.cellList.push(uid);\n\n        return React.createElement(Cell, {\n          toggle: function toggle() {\n            return _this.toggleLights(uid);\n          },\n          id: uid,\n          key: uid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.extractLetters = function () {\n      _this.cellList.forEach(function (cell) {\n        _this.extractedLetters.add(cell[0][0]);\n      });\n\n      _this.cellList.forEach(function (cell, i) {\n        _this.coordinates = {\n          x: cell[0],\n          y: cell[1]\n        };\n      });\n    };\n\n    _this.toggleLights = function (uid) {\n      var up = _this.extractedLetters.reduce(function (acc, letter) {\n        if (uid[0] === letter) {\n          return _this.extractedLetters[acc - 1] + uid[1];\n        }\n\n        acc++;\n      }, 0);\n    };\n\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        onClick: function onClick() {\n          return console.log(_this2.coordinates);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Lights Out\"), React.createElement(\"table\", {\n        className: \"Board-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.generateCells(\"a\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.generateCells(\"b\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.generateCells(\"c\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.generateCells(\"d\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.generateCells(\"e\")))), this.extractLetters());\n    }\n  }]);\n\n  return Board;\n}(Component);\n\nexport default Board;","map":{"version":3,"sources":["/Users/shiraz/Documents/react-bootcamp-materials/12-lights-out-game/react-lights-out-starter/src/Board.js"],"names":["React","Component","Cell","Board","state","win","cellList","extractedLetters","Set","coordinates","generateCells","char","Array","map","x","i","uid","push","toggleLights","extractLetters","forEach","cell","add","y","up","reduce","acc","letter","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,aAAP;;IAEMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,GAAG,EAAE;AADC,K;UAIRC,Q,GAAW,E;UACXC,gB,GAAmB,IAAIC,GAAJ,E;UACnBC,W,GAAc,E;;UAEdC,a,GAAgB,UAACC,IAAD,EAAU;AACxB,aAAO,mBAAIC,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,UAACC,CAAD,EAAGC,CAAH,EAAS;AAChC,YAAIC,GAAG,GAAGL,IAAI,IAAII,CAAC,GAAG,CAAR,CAAd;;AACA,cAAKT,QAAL,CAAcW,IAAd,CAAmBD,GAAnB;;AACA,eAAO,oBAAC,IAAD;AAAM,UAAA,MAAM,EAAE;AAAA,mBAAM,MAAKE,YAAL,CAAkBF,GAAlB,CAAN;AAAA,WAAd;AAA4C,UAAA,EAAE,EAAEA,GAAhD;AAAqD,UAAA,GAAG,EAAEA,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAJM,CAAP;AAKD,K;;UAEDG,c,GAAiB,YAAM;AACrB,YAAKb,QAAL,CAAcc,OAAd,CAAsB,UAACC,IAAD,EAAU;AAC9B,cAAKd,gBAAL,CAAsBe,GAAtB,CAA0BD,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAA1B;AACD,OAFD;;AAIA,YAAKf,QAAL,CAAcc,OAAd,CAAsB,UAACC,IAAD,EAAMN,CAAN,EAAY;AAChC,cAAKN,WAAL,GAAmB;AAACK,UAAAA,CAAC,EAAEO,IAAI,CAAC,CAAD,CAAR;AAAaE,UAAAA,CAAC,EAAEF,IAAI,CAAC,CAAD;AAApB,SAAnB;AACD,OAFD;AAGD,K;;UAEDH,Y,GAAe,UAACF,GAAD,EAAS;AAEtB,UAAIQ,EAAE,GAAG,MAAKjB,gBAAL,CAAsBkB,MAAtB,CAA6B,UAACC,GAAD,EAAKC,MAAL,EAAc;AAClD,YAAGX,GAAG,CAAC,CAAD,CAAH,KAAWW,MAAd,EAAqB;AACnB,iBAAO,MAAKpB,gBAAL,CAAsBmB,GAAG,GAAC,CAA1B,IAA+BV,GAAG,CAAC,CAAD,CAAzC;AACD;;AACDU,QAAAA,GAAG;AACJ,OALQ,EAKP,CALO,CAAT;AAOD,K;;;;;;;6BAIQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,OAAO,EAAE;AAAA,iBAAME,OAAO,CAACC,GAAR,CAAY,MAAI,CAACpB,WAAjB,CAAN;AAAA,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,aAAL,CAAmB,GAAnB,CADH,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,aAAL,CAAmB,GAAnB,CADH,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,aAAL,CAAmB,GAAnB,CADH,CAPF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,aAAL,CAAmB,GAAnB,CADH,CAVF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,aAAL,CAAmB,GAAnB,CADH,CAbF,CADF,CAFF,EAoBW,KAAKS,cAAL,EApBX,CADF;AAwBD;;;;EAjEiBlB,S;;AAqEpB,eAAeE,KAAf","sourcesContent":["import React, {Component} from \"react\";\nimport Cell from \"./Cell\";\nimport './Board.css';\n\nclass Board extends Component {\n  state = {\n    win: false,\n  }\n\n  cellList = [];\n  extractedLetters = new Set();\n  coordinates = {};\n\n  generateCells = (char) => {\n    return [...Array(5)].map((x,i) => {\n      let uid = char + (i + 1);\n      this.cellList.push(uid);\n      return <Cell toggle={() => this.toggleLights(uid)} id={uid} key={uid} />\n    });\n  }\n\n  extractLetters = () => {\n    this.cellList.forEach((cell) => {\n      this.extractedLetters.add(cell[0][0]);\n    });\n\n    this.cellList.forEach((cell,i) => {\n      this.coordinates = {x: cell[0], y: cell[1]};\n    });\n  }\n\n  toggleLights = (uid) => {\n\n    let up = this.extractedLetters.reduce((acc,letter)=>{\n      if(uid[0] === letter){\n        return this.extractedLetters[acc-1] + uid[1];\n      }\n      acc++\n    },0);\n\n  }\n\n\n\n  render() {\n    return(\n      <div>\n        <h1 onClick={() => console.log(this.coordinates)}>Lights Out</h1>\n        <table className=\"Board-grid\">\n          <tbody>\n            <tr>\n              {this.generateCells(\"a\")}\n            </tr>\n            <tr>\n              {this.generateCells(\"b\")}\n            </tr>\n            <tr>\n              {this.generateCells(\"c\")}\n            </tr>\n            <tr>\n              {this.generateCells(\"d\")}\n            </tr>\n            <tr>\n              {this.generateCells(\"e\")}\n            </tr>\n          </tbody>\n        </table>{this.extractLetters()}\n      </div>\n    )\n  }\n}\n\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}