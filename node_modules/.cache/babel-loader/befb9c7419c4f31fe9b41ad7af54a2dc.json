{"ast":null,"code":"import _toConsumableArray from \"/Users/shiraz/Documents/react-bootcamp-materials/12-lights-out-game/react-lights-out-starter/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/shiraz/Documents/react-bootcamp-materials/12-lights-out-game/react-lights-out-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shiraz/Documents/react-bootcamp-materials/12-lights-out-game/react-lights-out-starter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shiraz/Documents/react-bootcamp-materials/12-lights-out-game/react-lights-out-starter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shiraz/Documents/react-bootcamp-materials/12-lights-out-game/react-lights-out-starter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shiraz/Documents/react-bootcamp-materials/12-lights-out-game/react-lights-out-starter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shiraz/Documents/react-bootcamp-materials/12-lights-out-game/react-lights-out-starter/src/Board.js\";\nimport React, { Component } from \"react\";\nimport Cell from \"./Cell\";\nimport './Board.css';\n\nvar Board =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Board, _Component);\n\n  function Board() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Board)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      win: false\n    };\n    _this.cellList = [];\n\n    _this.generateCells = function (char) {\n      return _toConsumableArray(Array(5)).map(function (x, i) {\n        var uid = char + (i + 1);\n\n        _this.cellList.push(uid);\n\n        return React.createElement(Cell, {\n          id: uid,\n          key: uid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        });\n      });\n    };\n\n    _this.toggleLights = function (uid) {\n      var letters = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\n      var extractedLetters = new Set();\n\n      _this.cellList.forEach(function (cell) {\n        extractedLetters.add(cell[0]);\n      });\n\n      if (uid[0] === letters[0]) {// if the first character of uid is equal to \"a\" ...\n      }\n\n      if (1 + 1) {//if the uid is equal to\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Lights Out\"), React.createElement(\"table\", {\n        className: \"Board-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.generateCells(\"a\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.generateCells(\"b\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.generateCells(\"c\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, this.generateCells(\"d\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.generateCells(\"e\")))));\n    }\n  }]);\n\n  return Board;\n}(Component);\n\nexport default Board;","map":{"version":3,"sources":["/Users/shiraz/Documents/react-bootcamp-materials/12-lights-out-game/react-lights-out-starter/src/Board.js"],"names":["React","Component","Cell","Board","state","win","cellList","generateCells","char","Array","map","x","i","uid","push","toggleLights","letters","split","extractedLetters","Set","forEach","cell","add"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,aAAP;;IAEMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,GAAG,EAAE;AADC,K;UAIRC,Q,GAAW,E;;UAEXC,a,GAAgB,UAACC,IAAD,EAAU;AACxB,aAAO,mBAAIC,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,UAACC,CAAD,EAAGC,CAAH,EAAS;AAChC,YAAIC,GAAG,GAAGL,IAAI,IAAII,CAAC,GAAG,CAAR,CAAd;;AACA,cAAKN,QAAL,CAAcQ,IAAd,CAAmBD,GAAnB;;AACA,eAAO,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAEA,GAAV;AAAe,UAAA,GAAG,EAAEA,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAJM,CAAP;AAKD,K;;UAEDE,Y,GAAe,UAACF,GAAD,EAAS;AACtB,UAAMG,OAAO,GAAG,6BAA6BC,KAA7B,CAAmC,EAAnC,CAAhB;AAEA,UAAIC,gBAAgB,GAAG,IAAIC,GAAJ,EAAvB;;AACA,YAAKb,QAAL,CAAcc,OAAd,CAAsB,UAACC,IAAD,EAAQ;AAC5BH,QAAAA,gBAAgB,CAACI,GAAjB,CAAqBD,IAAI,CAAC,CAAD,CAAzB;AACD,OAFD;;AAIA,UAAGR,GAAG,CAAC,CAAD,CAAH,KAAWG,OAAO,CAAC,CAAD,CAArB,EAAyB,CAAE;AAE1B;;AAED,UAAG,IAAE,CAAL,EAAO,CAAE;AAER;AAEF,K;;;;;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKT,aAAL,CAAmB,GAAnB,CADH,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,aAAL,CAAmB,GAAnB,CADH,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,aAAL,CAAmB,GAAnB,CADH,CAPF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,aAAL,CAAmB,GAAnB,CADH,CAVF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKA,aAAL,CAAmB,GAAnB,CADH,CAbF,CADF,CAFF,CADF;AAwBD;;;;EA1DiBN,S;;AA8DpB,eAAeE,KAAf","sourcesContent":["import React, {Component} from \"react\";\nimport Cell from \"./Cell\";\nimport './Board.css';\n\nclass Board extends Component {\n  state = {\n    win: false,\n  }\n\n  cellList = [];\n\n  generateCells = (char) => {\n    return [...Array(5)].map((x,i) => {\n      let uid = char + (i + 1);\n      this.cellList.push(uid);\n      return <Cell id={uid} key={uid} />\n    });\n  }\n\n  toggleLights = (uid) => {\n    const letters = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\n\n    let extractedLetters = new Set();\n    this.cellList.forEach((cell)=>{\n      extractedLetters.add(cell[0]);\n    });\n\n    if(uid[0] === letters[0]){ // if the first character of uid is equal to \"a\" ...\n\n    }\n\n    if(1+1){ //if the uid is equal to\n\n    }\n\n  }\n\n  render() {\n    return(\n      <div>\n        <h1>Lights Out</h1>\n        <table className=\"Board-grid\">\n          <tbody>\n            <tr>\n              {this.generateCells(\"a\")}\n            </tr>\n            <tr>\n              {this.generateCells(\"b\")}\n            </tr>\n            <tr>\n              {this.generateCells(\"c\")}\n            </tr>\n            <tr>\n              {this.generateCells(\"d\")}\n            </tr>\n            <tr>\n              {this.generateCells(\"e\")}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}